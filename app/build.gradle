// Android plugin
apply plugin: 'com.android.application'
// Kotlin plugin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
// Firebase plugin
apply plugin: 'com.google.firebase.firebase-crash'

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

android {
    compileSdkVersion 26

    // Auto version numbering
    def versionPropsFile = file('version.properties')
    def versionMajor, versionMinor, versionRevision, versionBuild, versionCodeNr
    if (!versionPropsFile.canRead()) {
        throw new FileNotFoundException("Could not read version.properties!")
    } else {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))

        versionMajor = versionProps['VERSION_MAJOR'].toInteger()
        versionMinor = versionProps['VERSION_MINOR'].toInteger()
        versionRevision = versionProps['VERSION_REVISION'].toInteger()
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
        versionCodeNr = versionProps['VERSION_CODE'].toInteger()

        // build number + version code gets incremented every run
        versionBuild = versionBuild + 1
        versionCodeNr = versionCodeNr + 1
        if (!versionPropsFile.canWrite()) {
            throw new FileNotFoundException("Could not write version.properties!")
        } else {
            versionProps['VERSION_BUILD'] = versionBuild.toString()
            versionProps['VERSION_CODE'] = versionCodeNr.toString()
            versionProps.store(new FileOutputStream(versionPropsFile), "writing new versions")
        }
    }


    defaultConfig {
        applicationId "me.kaesaecracker.campus_dual"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode versionCodeNr
        versionName "$versionMajor.$versionMinor.$versionRevision.$versionBuild"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


dependencies {
    def support_version = "26.1.0"

    // google and kotlin stuff
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:support-v4:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    // firebase
    implementation 'com.google.firebase:firebase-crash:11.8.0'

    // test stuff
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    // My libraries
    compile 'me.eugeniomarletti:android-extras-delegates:1.0.5'
    compile 'android.arch.lifecycle:extensions:1.0.0'
    compile 'com.android.support:customtabs:26.1.0'
    compile 'com.github.jkcclemens:khttp:0.1.0'
    compile 'org.jetbrains.anko:anko-common:0.10.4'
}

apply plugin: 'com.google.gms.google-services'